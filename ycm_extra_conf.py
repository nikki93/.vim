import vim
import os

def FlagsForFile(filename):
    filetype = vim.eval("&filetype")

    flags = []

    # c/c++
    if filetype == 'c' or filetype == 'cpp':
        flags = []

        # set language flag
        flags = flags + ['-x', 'c' if filetype == 'c' else 'c++']

        # read 'flags.make' files generated by cmake
        for root, dirnames, files in os.walk('./Build'):
            for file in files:
                if file == 'flags.make':
                    for line in open(os.path.join(root, file), 'r'):
                        strip = line.strip(' ')
                        if strip.startswith('CXX_FLAGS') or strip.startswith('CXX_DEFINES'):
                            flags = flags + strip[strip.index('=') + 1:].split()

        # read local .coptions/.cppoptions
        try:
            flags = flags + list(line.rstrip('\n') for line in open('.coptions', 'r'))
        except:
            pass
        try:
            flags = flags + list(line.rstrip('\n') for line in open('.cppoptions', 'r'))
        except:
            pass

        # tell syntastic
        syntasticvar = 'g:syntastic_c_compiler_options'
        vim.command("let " + syntasticvar + "=' " + ' '.join(flags) + "'")

    # tell ycm
    return { 'flags': flags, 'do_cache': True}



